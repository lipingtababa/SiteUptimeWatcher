name: Cluster Setup

on:
  workflow_dispatch:  # Manual trigger only

env:
  AWS_REGION: us-east-1
  AWS_ACCOUNT: 954976318202
  EKS_CLUSTER: idp
  NAMESPACE: watcher

permissions:
  id-token: write
  contents: read

jobs:
  setup-cluster:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT }}:role/github-action
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.4.6"

      - name: Terraform Init
        run: |
          cd infra/dependencies
          terraform init

      - name: Terraform Plan
        run: |
          cd infra/dependencies
          terraform plan -out=tfplan

      - name: Terraform Apply
        run: |
          cd infra/dependencies
          terraform apply -auto-approve tfplan

      - name: Wait for EKS cluster
        run: |
          echo "Waiting for EKS cluster to be ready..."
          aws eks wait cluster-active --name ${{ env.EKS_CLUSTER }} --region ${{ env.AWS_REGION }}
          echo "EKS cluster is ready!"

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER }} --region ${{ env.AWS_REGION }}

      - name: Create watcher namespace
        run: kubectl create namespace ${{ env.NAMESPACE }} --dry-run=client -o yaml | kubectl apply -f -

      - name: Install ArgoCD
        run: |
          chmod +x infra/argocd/install-argocd.sh
          ./infra/argocd/install-argocd.sh

      - name: Wait for ArgoCD
        run: |
          kubectl wait --for=condition=Available deployment/argocd-server -n argocd --timeout=300s

      - name: Get ArgoCD URL and Password
        run: |
          echo "ArgoCD Server URL:"
          kubectl get svc argocd-server -n argocd -o jsonpath='{.status.loadBalancer.ingress[0].hostname}'
          echo -e "\nArgoCD Admin Password:"
          kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d

      - name: Notify setup completion
        if: always()
        uses: actions/github-script@v6
        with:
          script: |
            const status = '${{ job.status }}' === 'success' ? '✅' : '❌';
            const message = `Cluster Setup ${status}\nCluster: ${{ env.EKS_CLUSTER }}\nRun: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}`;
            if (context.issue.number) {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: message
              });
            } 